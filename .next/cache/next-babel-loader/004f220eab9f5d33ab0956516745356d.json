{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/Resume.js\";\nvar __jsx = React.createElement;\nimport './resume.css';\nimport React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nconst Resume = props => {\n  const createJobGroup = jobs => {\n    const makeHeaderLink = job => {\n      if (job.link === \"none\") {\n        return __jsx(React.Fragment, null, job.company);\n      }\n\n      return __jsx(\"a\", {\n        href: job.link,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, job.company);\n    };\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, jobs.map(function (job, index) {\n      return __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, makeHeaderLink(job), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), __jsx(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, job.type, \" - \", job.roll), __jsx(\"span\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, job.time)), __jsx(\"ul\", {\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, job.whathappened.map(function (whatidid, index) {\n        return __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, whatidid);\n      })));\n    }));\n  };\n\n  const createRelevantCourseworkGroup = classes => {\n    return __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, classes.map(function (c, index) {\n      return __jsx(\"li\", {\n        className: \"col-lg-6 col-md-6 col-12 mb-1\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, c);\n    }));\n  };\n\n  const createProjectsGroup = projects => {\n    const makeHeaderLink = project => {\n      if (project.link === \"TBD\") {\n        return __jsx(React.Fragment, null, project.name, \" - Coming Soon\");\n      }\n\n      return __jsx(\"a\", {\n        href: project.link,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, project.name);\n    };\n\n    return __jsx(React.Fragment, null, projects.map(function (project, index) {\n      return __jsx(\"div\", {\n        className: \"mb-2\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, makeHeaderLink(project), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, project.description), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, project.link)));\n    }));\n  };\n\n  const createSportsGroup = sports => {\n    return __jsx(React.Fragment, null, sports.map(function (sport, index) {\n      return __jsx(\"div\", {\n        className: \"mb-2\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, sport.name, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), __jsx(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, sport.position), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, sport.accolades.map(function (element, index) {\n        return __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, element);\n      })));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: \"justify-content-center col-lg-10 offset-lg-1 col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Card.Title, {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \" Michael Di Paolo \"), __jsx(Card.Subtitle, {\n    className: \"mb-2 text-muted text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Chicago, Illinois - notdipaolo@outlook.com\"), __jsx(ListGroup, {\n    variant: \"flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Education\"), \"DePaul University \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), __jsx(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Bachelor of Science in Computer Science - Software Development \"), __jsx(\"span\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"2016-2020\"))), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Work Experience\"), createJobGroup(props.resume.jobs)), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Additional Industry Experience\"), createJobGroup(props.resume.additionalIndustryExperience)), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Relevant Coursework\"), createRelevantCourseworkGroup(props.resume.relevantCoursework)), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Projects\"), createProjectsGroup(props.resume.projects)), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Sports\"), createSportsGroup(props.resume.sports)))))));\n};\n\nfunction mapStateToProps(state) {\n  const resume = state.resumeReducer;\n  return {\n    resume: resume\n  };\n}\n\nexport default connect(mapStateToProps)(Resume);","map":{"version":3,"sources":["/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/Resume.js"],"names":["React","Card","ListGroup","connect","Resume","props","createJobGroup","jobs","makeHeaderLink","job","link","company","map","index","type","roll","time","whathappened","whatidid","createRelevantCourseworkGroup","classes","c","createProjectsGroup","projects","project","name","description","createSportsGroup","sports","sport","position","accolades","element","resume","additionalIndustryExperience","relevantCoursework","mapStateToProps","state","resumeReducer"],"mappings":"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","sourcesContent":["import './resume.css';\nimport React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nconst Resume = (props) => {\n\n    const createJobGroup = (jobs) => {\n      const makeHeaderLink = (job) =>{  \n        if(job.link === \"none\"){\n          return(\n          <>\n            {job.company}\n          </>\n          );\n        }\n        return(\n            <a href={job.link} target=\"_blank\">{job.company}</a> \n        );\n      }\n      return (\n        <div>\n          {jobs.map(function(job,index) {\n            return (\n              <div key={index}>\n              \n                {makeHeaderLink(job)} \n                <br></br>\n                <small>\n                  <span>\n                    {job.type} - {job.roll} \n                  </span>\n                  <span className='time'>\n                      {job.time}\n                  </span>\n                </small>\n                <ul className=\"mt-1\">\n                  {(job.whathappened).map(function(whatidid,index){\n                    return (\n                      <li key={index}>{whatidid}</li>\n                    )\n                  })}\n                </ul>\n              </div>\n            );\n          })}\n        </div>\n      ); \n    }\n\n    const createRelevantCourseworkGroup = (classes) => {\n      return(\n        <div className='row'>\n          {classes.map(function(c, index){\n            return(\n              <li className='col-lg-6 col-md-6 col-12 mb-1' key={index}>\n                {c}\n              </li>\n            )\n          })}\n        </div>\n      )\n    }\n\n    const createProjectsGroup = (projects) => {\n      const makeHeaderLink = (project) =>{  \n        if(project.link === \"TBD\"){\n          return(\n          <>\n            {project.name} - Coming Soon\n          </>\n          );\n        }\n        return(\n            <a href={project.link} target=\"_blank\">{project.name}</a> \n        );\n      }\n      \n      return (\n        <>\n          {projects.map(function(project, index) {\n            return (\n              <div className='mb-2' key={index}>\n                {makeHeaderLink(project)}\n                <br></br>\n                <ul>\n                  <li>{project.description}</li>\n                  <li>{project.link}</li>\n                </ul>\n              </div>\n            );\n          })}\n        </>\n      );      \n    }\n\n    const createSportsGroup = (sports) =>{\n      return (\n        <>\n          {sports.map(function(sport, index) {\n            return (\n              <div className='mb-2' key={index}>\n                {sport.name}<br></br>\n                <small>{sport.position}</small>\n                <ul>\n                  {(sport.accolades).map(function(element, index){\n                    return (\n                      <li key={index}>{element}</li>\n                    )\n                  })}\n                </ul>\n              </div>\n            );\n          })}\n        </>\n      );    \n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Card className=\"justify-content-center col-lg-10 offset-lg-1 col-12\">\n        <Card.Body>\n          <Card.Title className=\"text-center\"> Michael Di Paolo </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted text-center\">Chicago, Illinois - notdipaolo@outlook.com</Card.Subtitle>  \n              <ListGroup variant=\"flush\">\n                <ListGroup.Item> \n                  <h5>Education</h5>\n                  DePaul University <br></br> \n                  <small>\n                    <span>Bachelor of Science in Computer Science - Software Development </span>\n                    <span className='time'>2016-2020</span>\n                  </small>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5>Work Experience</h5>\n                  {createJobGroup(props.resume.jobs)}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5>Additional Industry Experience</h5>\n                  {createJobGroup(props.resume.additionalIndustryExperience)}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5>Relevant Coursework</h5>\n                  {createRelevantCourseworkGroup(props.resume.relevantCoursework)}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5>Projects</h5>\n                  {createProjectsGroup(props.resume.projects)}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5>Sports</h5>\n                  {createSportsGroup(props.resume.sports)}\n                </ListGroup.Item>\n              </ListGroup>\n          </Card.Body>\n        </Card>\n        </div>\n      </div>\n    )\n}\n\nfunction mapStateToProps(state){\n  const resume = state.resumeReducer;\n  return {\n    resume: resume\n  }\n}\n\nexport default connect(mapStateToProps)(Resume);"]},"metadata":{},"sourceType":"module"}