{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/beer/country.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; //gets the unique countries in the object\n\nconst getUnqiue = (object, key) => {\n  const allElements = object.map(x => x[key]);\n  const unqiueElements = [...new Set(allElements)];\n  return unqiueElements;\n}; //gets how many times those unique elements show up in the object \n\n\nconst getValues = (array, beer) => {\n  const allBeer = beer.map(x => x.country);\n  console.log(allBeer);\n  let values = [];\n  array.forEach(element => values.push(countValues(allBeer, element)));\n  return values;\n};\n\nconst countValues = (array, element) => {\n  return array.filter(v => v === element).length;\n};\n\nconst Types = props => {\n  const labels = getUnqiue(props.beer, 'country');\n  const data = getValues(labels, props.beer);\n  const colors = [\"red\", \"blue\", \"yellow\", \"green\", \"brown\"];\n  const asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: colors,\n        hoverBackgroundColor: colors\n      }]\n    }\n  };\n  return __jsx(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Country of Origin\"), __jsx(Pie, {\n    data: asdf.dataPie,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nexport default Types;","map":{"version":3,"sources":["/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/beer/country.js"],"names":["React","Pie","MDBContainer","getUnqiue","object","key","allElements","map","x","unqiueElements","Set","getValues","array","beer","allBeer","country","console","log","values","forEach","element","push","countValues","filter","v","length","Types","props","labels","data","colors","asdf","dataPie","datasets","backgroundColor","hoverBackgroundColor","responsive"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CAEA;;AACA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB;AACjC,QAAMC,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACH,GAAD,CAAjB,CAApB;AACA,QAAMI,cAAc,GAAI,CAAC,GAAI,IAAIC,GAAJ,CAAQJ,WAAR,CAAL,CAAxB;AACA,SAAOG,cAAP;AACD,CAJD,C,CAMA;;;AACA,MAAME,SAAS,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAgB;AAChC,QAAMC,OAAO,GAAGD,IAAI,CAACN,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACO,OAAhB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,MAAII,MAAM,GAAG,EAAb;AACAN,EAAAA,KAAK,CAACO,OAAN,CAAcC,OAAO,IAAIF,MAAM,CAACG,IAAP,CAAYC,WAAW,CAACR,OAAD,EAAUM,OAAV,CAAvB,CAAzB;AAEA,SAAOF,MAAP;AACD,CARD;;AAUA,MAAMI,WAAW,GAAG,CAACV,KAAD,EAAQQ,OAAR,KAAoB;AACtC,SAAOR,KAAK,CAACW,MAAN,CAAcC,CAAD,IAAQA,CAAC,KAAKJ,OAA3B,EAAqCK,MAA5C;AACD,CAFD;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,QAAMC,MAAM,GAAGzB,SAAS,CAACwB,KAAK,CAACd,IAAP,EAAa,SAAb,CAAxB;AACA,QAAMgB,IAAI,GAAGlB,SAAS,CAACiB,MAAD,EAASD,KAAK,CAACd,IAAf,CAAtB;AACA,QAAMiB,MAAM,GAAG,CACb,KADa,EAEb,MAFa,EAGb,QAHa,EAIb,OAJa,EAKb,OALa,CAAf;AAQA,QAAMC,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,MAAM,EAAEA,MADD;AAEPK,MAAAA,QAAQ,EAAE,CACR;AACEJ,QAAAA,IAAI,EAAEA,IADR;AAEEK,QAAAA,eAAe,EAAEJ,MAFnB;AAGEK,QAAAA,oBAAoB,EAAEL;AAHxB,OADQ;AAFH;AADE,GAAb;AAaA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEC,IAAI,CAACC,OAAhB;AAAyB,IAAA,OAAO,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA/BD;;AAiCA,eAAgBV,KAAhB","sourcesContent":["import React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\n//gets the unique countries in the object\nconst getUnqiue = (object, key) => {\n  const allElements = object.map(x => x[key]);\n  const unqiueElements = ([... new Set(allElements)]);\n  return unqiueElements;\n}\n\n//gets how many times those unique elements show up in the object \nconst getValues = (array, beer) =>{\n  const allBeer = beer.map(x => x.country);\n  console.log(allBeer);\n\n  let values = [];\n  array.forEach(element => values.push(countValues(allBeer, element)));\n  \n  return values;\n}\n\nconst countValues = (array, element) => {\n  return(array.filter((v) => (v === element)).length);\n}\n\nconst Types = (props) => {\n\n  const labels = getUnqiue(props.beer, 'country');\n  const data = getValues(labels, props.beer);\n  const colors = [\n    \"red\",\n    \"blue\",\n    \"yellow\",\n    \"green\",\n    \"brown\",\n  ];\n\n  const asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: colors,\n          hoverBackgroundColor: colors\n        }\n      ]\n    }\n  }\n\n  return (\n    <MDBContainer>\n      <h3>Country of Origin</h3>\n      <Pie data={asdf.dataPie} options={{ responsive: true }} />\n    </MDBContainer>\n  )\n}\n\nexport default (Types);"]},"metadata":{},"sourceType":"module"}