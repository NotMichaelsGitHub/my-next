{"ast":null,"code":"// import React from 'react';\n// import { useTable, useSortBy } from 'react-table';\n// // function Table({ columns, data }) {\n// //     const {\n// //       getTableProps,\n// //       getTableBodyProps,\n// //       headerGroups,\n// //       rows,\n// //       prepareRow,\n// //     } = useTable(\n// //       {\n// //         columns,\n// //         data,\n// //       },\n// //       useSortBy\n// //     )\n// //     // We don't want to render all 2000 rows for this example, so cap\n// //     // it at 20 for this use case\n// //     const firstPageRows = rows.slice(0, 20)\n// //     return (\n// //       <>\n// //         <table {...getTableProps()}>\n// //           <thead>\n// //             {headerGroups.map(headerGroup => (\n// //               <tr {...headerGroup.getHeaderGroupProps()}>\n// //                 {headerGroup.headers.map(column => (\n// //                   // Add the sorting props to control sorting. For this example\n// //                   // we can add them into the header props\n// //                   <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n// //                     {column.render('Header')}\n// //                     {/* Add a sort direction indicator */}\n// //                     <span>\n// //                       {column.isSorted\n// //                         ? column.isSortedDesc\n// //                           ? ' ðŸ”½'\n// //                           : ' ðŸ”¼'\n// //                         : ''}\n// //                     </span>\n// //                   </th>\n// //                 ))}\n// //               </tr>\n// //             ))}\n// //           </thead>\n// //           <tbody {...getTableBodyProps()}>\n// //             {firstPageRows.map(\n// //               (row, i) => {\n// //                 prepareRow(row);\n// //                 return (\n// //                   <tr {...row.getRowProps()}>\n// //                     {row.cells.map(cell => {\n// //                       return (\n// //                         <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n// //                       )\n// //                     })}\n// //                   </tr>\n// //                 )}\n// //             )}\n// //           </tbody>\n// //         </table>\n// //       </>\n// //     )\n// // }\n// const Tbl = (beer) => {\n//   const columns = React.useMemo(\n//     () => [\n//         {\n//             Header: 'Beer',\n//             columns: [\n//               {\n//                 Header: 'Name',\n//                 accessor: 'firstName',\n//               },\n//               {\n//                 Header: 'Type',\n//                 accessor: 'lastName',\n//               },\n//             ],\n//         },\n//       ],\n//     []\n//   )\n//   console.log(beer.allbeer);\n//       const data = beer.allbeer;\n//       return (\n//         // <Table columns={columns} data={data} />\n//         <p>able</p>\n//       )\n// }\n// export default (Tbl);","map":{"version":3,"sources":["/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/beer/table.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import { useTable, useSortBy } from 'react-table';\n\n// // function Table({ columns, data }) {\n// //     const {\n// //       getTableProps,\n// //       getTableBodyProps,\n// //       headerGroups,\n// //       rows,\n// //       prepareRow,\n// //     } = useTable(\n// //       {\n// //         columns,\n// //         data,\n// //       },\n// //       useSortBy\n// //     )\n  \n// //     // We don't want to render all 2000 rows for this example, so cap\n// //     // it at 20 for this use case\n// //     const firstPageRows = rows.slice(0, 20)\n  \n// //     return (\n// //       <>\n// //         <table {...getTableProps()}>\n// //           <thead>\n// //             {headerGroups.map(headerGroup => (\n// //               <tr {...headerGroup.getHeaderGroupProps()}>\n// //                 {headerGroup.headers.map(column => (\n// //                   // Add the sorting props to control sorting. For this example\n// //                   // we can add them into the header props\n// //                   <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n// //                     {column.render('Header')}\n// //                     {/* Add a sort direction indicator */}\n// //                     <span>\n// //                       {column.isSorted\n// //                         ? column.isSortedDesc\n// //                           ? ' ðŸ”½'\n// //                           : ' ðŸ”¼'\n// //                         : ''}\n// //                     </span>\n// //                   </th>\n// //                 ))}\n// //               </tr>\n// //             ))}\n// //           </thead>\n// //           <tbody {...getTableBodyProps()}>\n// //             {firstPageRows.map(\n// //               (row, i) => {\n// //                 prepareRow(row);\n// //                 return (\n// //                   <tr {...row.getRowProps()}>\n// //                     {row.cells.map(cell => {\n// //                       return (\n// //                         <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n// //                       )\n// //                     })}\n// //                   </tr>\n// //                 )}\n// //             )}\n// //           </tbody>\n// //         </table>\n// //       </>\n// //     )\n// // }\n\n// const Tbl = (beer) => {\n//   const columns = React.useMemo(\n//     () => [\n//         {\n//             Header: 'Beer',\n//             columns: [\n//               {\n//                 Header: 'Name',\n//                 accessor: 'firstName',\n//               },\n//               {\n//                 Header: 'Type',\n//                 accessor: 'lastName',\n//               },\n//             ],\n//         },\n//       ],\n//     []\n//   )\n\n//   console.log(beer.allbeer);\n    \n//       const data = beer.allbeer;\n    \n//       return (\n//         // <Table columns={columns} data={data} />\n//         <p>able</p>\n//       )\n// }\n\n// export default (Tbl);"]},"metadata":{},"sourceType":"script"}