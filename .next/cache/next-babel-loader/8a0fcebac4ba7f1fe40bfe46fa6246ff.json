{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; //gets the unique countries in the object\n\nvar getUnqiue = function getUnqiue(object, key) {\n  var allElements = object.map(function (x) {\n    return x[key];\n  });\n\n  var unqiueElements = _toConsumableArray(new Set(allElements));\n\n  return unqiueElements;\n}; //gets how many times those unique elements show up in the object\n\n\nvar getValues = function getValues(beer, key, labels) {\n  var allBeer = beer.map(function (x) {\n    return x[key];\n  });\n  var values = [];\n  labels.forEach(function (element) {\n    return values.push(allBeer.filter(function (v) {\n      return v === element;\n    }).length);\n  });\n  return values;\n};\n\nvar Country = function Country(props) {\n  var labels = getUnqiue(props.beer, \"country\");\n  var data = getValues(props.beer, \"country\", labels); //todo create a way to make the background match the country flags but this is fine for now just to get a working example\n\n  var colors = [\"red\", \"blue\", \"yellow\", \"green\", \"orange\", \"purple\", \"navy\", \"brown\", \"skyblue\", \"salmon\", \"orangered\", \"olive\", \"mediumorchid\", \"maroon\", \"lime\", \"pink\", \"goldenrod\", \"firebrick\", \"darkcyan\", \"cornflowerblue\", \"chocolate\", \"firebrick\", \"darkcyan\", \"cornflowerblue\", \"chocolate\"];\n  var asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: colors,\n        hoverBackgroundColor: colors\n      }]\n    }\n  };\n  return __jsx(MDBContainer, null, __jsx(\"h3\", null, \"Country of Origin\"), __jsx(Pie, {\n    data: asdf.dataPie,\n    options: {\n      responsive: true\n    }\n  }));\n};\n\nexport default Country;","map":null,"metadata":{},"sourceType":"module"}