{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/beer/country.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; //gets the unique countries in the object\n\nvar getUnqiue = function getUnqiue(object, key) {\n  var allElements = object.map(function (x) {\n    return x[key];\n  });\n\n  var unqiueElements = _toConsumableArray(new _Set(allElements));\n\n  return unqiueElements;\n}; //gets how many times those unique elements show up in the object \n\n\nvar getValues = function getValues(beer, country, labels) {\n  var allBeer = beer.map(function (x) {\n    return x[country];\n  });\n  var values = [];\n  labels.forEach(function (element) {\n    return values.push(allBeer.filter(function (v) {\n      return v === element;\n    }).length);\n  });\n  return values;\n};\n\nvar Country = function Country(props) {\n  var labels = getUnqiue(props.beer, 'country');\n  var data = getValues(props.beer, 'country', labels);\n  var colors = [\"red\", \"blue\", \"yellow\", \"green\", \"brown\"];\n  var asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: colors,\n        hoverBackgroundColor: colors\n      }]\n    }\n  };\n  return (// <MDBContainer>\n    __jsx(React.Fragment, null, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Country of Origin\"), __jsx(Pie, {\n      data: asdf.dataPie,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })) // </MDBContainer>\n\n  );\n};\n\nexport default Country;","map":{"version":3,"sources":["/Users/michaeldipaolo/Desktop/michaeldipaolo.com/my-next/components/beer/country.js"],"names":["React","Pie","MDBContainer","getUnqiue","object","key","allElements","map","x","unqiueElements","getValues","beer","country","labels","allBeer","values","forEach","element","push","filter","v","length","Country","props","data","colors","asdf","dataPie","datasets","backgroundColor","hoverBackgroundColor","responsive"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CAEA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,GAAT,EAAiB;AACjC,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACH,GAAD,CAAL;AAAA,GAAZ,CAApB;;AACA,MAAMI,cAAc,sBAAS,SAAQH,WAAR,CAAT,CAApB;;AACA,SAAOG,cAAP;AACD,CAJD,C,CAMA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,EAA0B;AAC1C,MAAMC,OAAO,GAAGH,IAAI,CAACJ,GAAL,CAAS,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACI,OAAD,CAAL;AAAA,GAAV,CAAhB;AAEA,MAAIG,MAAM,GAAG,EAAb;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,UAAAC,OAAO;AAAA,WAAIF,MAAM,CAACG,IAAP,CACtBJ,OAAO,CAACK,MAAR,CAAe,UAACC,CAAD;AAAA,aAAQA,CAAC,KAAKH,OAAd;AAAA,KAAf,EAAuCI,MADjB,CAAJ;AAAA,GAAtB;AAKA,SAAON,MAAP;AACD,CAVD;;AAYA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEzB,MAAMV,MAAM,GAAGV,SAAS,CAACoB,KAAK,CAACZ,IAAP,EAAa,SAAb,CAAxB;AACA,MAAMa,IAAI,GAAGd,SAAS,CAACa,KAAK,CAACZ,IAAP,EAAa,SAAb,EAAwBE,MAAxB,CAAtB;AACA,MAAMY,MAAM,GAAG,CACb,KADa,EAEb,MAFa,EAGb,QAHa,EAIb,OAJa,EAKb,OALa,CAAf;AAQA,MAAMC,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAE;AACPd,MAAAA,MAAM,EAAEA,MADD;AAEPe,MAAAA,QAAQ,EAAE,CACR;AACEJ,QAAAA,IAAI,EAAEA,IADR;AAEEK,QAAAA,eAAe,EAAEJ,MAFnB;AAGEK,QAAAA,oBAAoB,EAAEL;AAHxB,OADQ;AAFH;AADE,GAAb;AAaA,SACE;AACA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAEC,IAAI,CAACC,OAAhB;AAAyB,MAAA,OAAO,EAAE;AAAEI,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAME;;AANF;AAQD,CAjCD;;AAmCA,eAAgBT,OAAhB","sourcesContent":["import React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\n//gets the unique countries in the object\nconst getUnqiue = (object, key) => {\n  const allElements = object.map(x => x[key]);\n  const unqiueElements = ([... new Set(allElements)]);\n  return unqiueElements;\n}\n\n//gets how many times those unique elements show up in the object \nconst getValues = (beer, country, labels) =>{\n  const allBeer = beer.map(x => x[country]);\n\n  let values = [];\n  labels.forEach(element => values.push(\n      allBeer.filter((v) => (v === element)).length\n    )\n  );\n\n  return values;\n}\n\nconst Country = (props) => {\n\n  const labels = getUnqiue(props.beer, 'country');\n  const data = getValues(props.beer, 'country', labels);\n  const colors = [\n    \"red\",\n    \"blue\",\n    \"yellow\",\n    \"green\",\n    \"brown\",\n  ];\n\n  const asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: colors,\n          hoverBackgroundColor: colors\n        }\n      ]\n    }\n  }\n\n  return (\n    // <MDBContainer>\n    <>\n      <h3>Country of Origin</h3>\n      <Pie data={asdf.dataPie} options={{ responsive: true }} />\n    </>\n    // </MDBContainer>\n  )\n}\n\nexport default (Country);"]},"metadata":{},"sourceType":"module"}